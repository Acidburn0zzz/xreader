#!/usr/bin/python3

import sys
import gi

gi.require_version('Gtk', '3.0')
gi.require_version('EvinceDocument', '3.0')
gi.require_version('EvinceView', '3.0')

from gi.repository import Gtk
from gi.repository import EvinceDocument
from gi.repository import EvinceView

import gettext
gettext.install("xreader", "/usr/share/locale")

class XReader:

    def __init__(self):

        # Load the UI
        self.builder = Gtk.Builder()
        self.builder.set_translation_domain("xreader")
        self.builder.add_from_file("/usr/share/xreader/pyxreader.ui")
        for widget in self.builder.get_objects():
            name = Gtk.Buildable.get_name(widget)
            setattr(self, name, widget)

        # Connect widget signals (do this here rather than in Glade where regressions aren't as visible)
        self.toolbutton_prev.connect("clicked", self.on_button_prev_clicked)
        self.toolbutton_next.connect("clicked", self.on_button_next_clicked)
        self.menuitem_open.connect("activate", self.on_menuitem_open_activated)

        self.view = EvinceView.View()
        self.scrolledwindow.add(self.view)
        self.window.connect("destroy", Gtk.main_quit)
        self.window.show_all()

    def load(self, uri):
        try:
            EvinceDocument.init()
            self.document =  EvinceDocument.Document.factory_get_document(uri)
            self.model = EvinceView.DocumentModel.new_with_document(self.document)
            self.view.set_model(self.model)
        except Exception as exception:
            print(exception)

    def on_button_prev_clicked(self, widget):
        self.view.previous_page()

    def on_button_next_clicked(self, widget):
        self.view.next_page()

    def on_menuitem_open_activated(self, widget):
        dialog = Gtk.FileChooserDialog("Please choose a document", self.window,
            Gtk.FileChooserAction.OPEN,
            (Gtk.STOCK_CANCEL, Gtk.ResponseType.CANCEL,
             Gtk.STOCK_OPEN, Gtk.ResponseType.OK))
        dialog.set_default_size(800, 400)
        response = dialog.run()
        if response == Gtk.ResponseType.OK:
            self.load(dialog.get_uri())
        dialog.destroy()

xreader = XReader()
xreader.load(sys.argv[1])
Gtk.main()
